{"version":3,"sources":["components/constants/Global.js","components/nav-bar.js","components/state/index.js","components/sections/cart.js","components/sections/product-not-found.js","components/helpers/scanner/Scanner.js","components/helpers/scanner/BarcodeScanner.js","components/sections/scanner.js","components/sections/welcome.js","App.js","index.js"],"names":["MAIN_PAGE_LINK","SCAN_PAGE_LINK","CART_PAGE_LINK","NO_PRODUCT_PAGE_LINK","NavBar","react_default","a","createElement","className","_createGlobalState","createGlobalState","hasNavBar","scanResult","codeText","isWebCam","finalCode","setGlobalState","useGlobalState","Cart","props","React","useEffect","style","sectionStyle","ProductNotFound","Scanner","_Component","Object","inherits","_super","createSuper","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","call","apply","concat","_onDetected","result","onDetected","createClass","key","value","Quagga","init","inputStream","type","constraints","width","height","facingMode","locator","halfSample","patchSize","debug","showCanvas","showPatches","showFoundPatches","showSkeleton","showLabels","showPatchLabels","showRemainingPatchLabels","boxFromPatches","showTransformed","showTransformedBox","showBB","numOfWorkers","decoder","readers","drawBoundingBox","showFrequency","drawScanline","showPattern","locate","err","console","log","start","offDetected","stop","id","Component","_regeneratorRuntime","exports","Op","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","BarcodeScanner","_useGlobalState","slicedToArray","_useGlobalState3","_useGlobalState5","navigate","useNavigate","fetchData","_ref","asyncToGenerator","_callee","url","_context","axios","request","params","query","headers","X-RapidAPI-Key","X-RapidAPI-Host","response","data","localStorage","removeItem","setItem","JSON","stringify","_x","codeResult","code","onChange","e","target","localScanResult","toConsumableArray","handleInputChange","onClick","replace","scanner_Scanner","scanner_BarcodeScanner","react_router_dom_dist","to","Welcome","App","location","useLocation","minHeight","marginTop","window","reload","pathname","components_nav_bar","dist","exact","path","element","sections_welcome","sections_scanner","cart","product_not_found","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.4e7fbd61.chunk.js","sourcesContent":["export const MAIN_PAGE_LINK = \"/\"\nexport const SCAN_PAGE_LINK = \"/scan\"\nexport const CART_PAGE_LINK = \"/cart\"\nexport const NO_PRODUCT_PAGE_LINK = \"/productnotfound\"","import React from 'react'\nimport \"../styles/nav-bar.css\"\n\nconst NavBar = () => {\n  return (\n    <header className='navbar'>This is nav Bar</header>\n  )\n}\n\nexport default NavBar","import { createGlobalState } from \"react-hooks-global-state\";\n\nconst { setGlobalState, useGlobalState } = createGlobalState({\n  hasNavBar: false,\n  scanResult: [],\n  codeText: \"\",\n  isWebCam: false,\n  finalCode: \"\",\n});\n\nexport { useGlobalState, setGlobalState };\n","import React from 'react'\nimport { setGlobalState } from '../state'\n\nconst Cart = (props) => {\n    React.useEffect(() => {\n        if (!props.hasNavBar) {\n        setGlobalState(\"hasNavBar\", true)\n        }\n    }, [props.hasNavBar])\n\n  return (\n    <section style={props.sectionStyle}>Cart</section>\n  )\n}\n\nexport default Cart","import React from 'react'\nimport { setGlobalState } from '../state'\n\nconst ProductNotFound = (props) => {\n    React.useEffect(() => {\n        if (!props.hasNavBar) {\n        setGlobalState(\"hasNavBar\", true)\n        }\n    }, [props.hasNavBar])\n  return (\n    <section style={props.sectionStyle}>\n        ProductNotFound\n        </section>\n  )\n}\n\nexport default ProductNotFound","import React, { Component } from \"react\";\nimport Quagga from \"quagga\";\n\nclass Scanner extends Component {\n  componentDidMount() {\n    Quagga.init(\n      {\n        inputStream: {\n          type: \"LiveStream\",\n          constraints: {\n            width: 640,\n            height: 320,\n            facingMode: \"environment\"\n          }\n          //   area: { // defines rectangle of the detection/localization area\n          //     top: \"10%\",    // top offset\n          //     right: \"10%\",  // right offset\n          //     left: \"10%\",   // left offset\n          //     bottom: \"10%\"  // bottom offset\n          //   },\n        },\n        locator: {\n          halfSample: true,\n          patchSize: \"large\", // x-small, small, medium, large, x-large\n          debug: {\n            showCanvas: true,\n            showPatches: false,\n            showFoundPatches: false,\n            showSkeleton: false,\n            showLabels: false,\n            showPatchLabels: false,\n            showRemainingPatchLabels: false,\n            boxFromPatches: {\n              showTransformed: true,\n              showTransformedBox: true,\n              showBB: true\n            }\n          }\n        },\n        numOfWorkers: 4,\n        decoder: {\n          readers: [\"ean_reader\"],\n          debug: {\n            drawBoundingBox: true,\n            showFrequency: true,\n            drawScanline: true,\n            showPattern: true\n          }\n        },\n        locate: true\n      },\n      function (err) {\n        if (err) {\n          return console.log(err);\n        }\n        Quagga.start();\n      }\n    );\n    Quagga.onDetected(this._onDetected);\n  }\n\n  componentWillUnmount() {\n    Quagga.offDetected(this._onDetected);\n    Quagga.stop();\n  }\n\n  _onDetected = (result) => {\n    this.props.onDetected(result);\n  };\n\n  render() {\n    return <div id=\"interactive\" className=\"viewport\"/>;\n  }\n}\n\nexport default Scanner;\n","import axios from 'axios';\nimport React from 'react'\nimport { useNavigate } from 'react-router-dom';\nimport { CART_PAGE_LINK, NO_PRODUCT_PAGE_LINK } from '../../constants/Global';\nimport { setGlobalState, useGlobalState } from '../../state';\nimport Scanner from './Scanner'\n\nconst BarcodeScanner = () => {\n    const [scanResult] = useGlobalState(\"scanResult\")\n    const [codeText] = useGlobalState(\"codeText\")\n    const [finalCode] = useGlobalState(\"finalCode\")\n\n    const navigate = useNavigate()\n\n    const _onDetected = (result) => {\n        setGlobalState(\"scanResult\", [])\n        setGlobalState(\"scanResult\", scanResult.concat([result]))\n      };\n\n      const handleInputChange = (e) => {\n        console.log(e.target.value)\n        let localScanResult = [...scanResult]\n        if (localScanResult[0] && localScanResult[0].codeResult) {\n            localScanResult[0].codeResult.code = e.target.value\n        }\n        setGlobalState(\"codeText\", e.target.value)\n        setGlobalState(\"scanResult\", localScanResult)\n      }\n\n      const handleRetryClick = () => {\n        setGlobalState(\"scanResult\", []);\n        setGlobalState(\"codeText\", \"\");\n      };\n      const fetchData = async (url) => {\n        try {\n            axios.request({\n                method: 'GET',\n                url: 'https://barcodes1.p.rapidapi.com/',\n                params: {query: finalCode},\n                headers: {\n                  'X-RapidAPI-Key': '6811610b1dmsh5a38698f873c377p12e3a0jsn8fe11c21f95c',\n                  'X-RapidAPI-Host': 'barcodes1.p.rapidapi.com'\n                }\n              }).then(function (response) {\n                console.log(response.data)\n                localStorage.removeItem(\"scannedProductData\")\n                localStorage.setItem('scannedProductData', JSON.stringify(response.data));\n                if (\"product\" in response.data) {\n                    navigate(CART_PAGE_LINK)\n                } else {\n                    navigate(NO_PRODUCT_PAGE_LINK)\n                }\n              }).catch(function (error) {\n                console.log(error)\n                navigate(NO_PRODUCT_PAGE_LINK)\n              })\n        } catch (error) {\n            console.log(error.response)\n            // navigate(NO_PRODUCT_PAGE_LINK)\n        }\n      }\n      const handleSearchClick = () => {\n        if (finalCode.replace(/\\s/g,\"\") !== \"\") {\n            fetchData(finalCode)\n        }\n      }\n\n      React.useEffect(() => {\n        setGlobalState(\"finalCode\", scanResult[0] && scanResult[0].codeResult\n        ? scanResult[0].codeResult.code\n        : codeText)\n      }, [scanResult, codeText])\n      \n  return (\n    <div>\n        <span>Barcode Scanner</span>\n        <input\n        value={scanResult[0] && scanResult[0].codeResult\n            ? scanResult[0].codeResult.code\n            : codeText}\n        onChange={(e) => {handleInputChange(e)}}\n        />\n        <button onClick={handleRetryClick}>Retry</button>\n        <button onClick={handleSearchClick}>Search</button>\n        <Scanner onDetected={_onDetected} />\n    </div>\n  )\n}\n\nexport default BarcodeScanner","import React from 'react'\nimport { setGlobalState } from '../state'\nimport \"../../styles/scanner.css\"\nimport BarcodeScanner from '../helpers/scanner/BarcodeScanner'\nimport { NavLink } from 'react-router-dom'\nimport { MAIN_PAGE_LINK } from '../constants/Global'\n\nconst Scanner = (props) => {\n\nReact.useEffect(() => {\n    if (!props.hasNavBar) {\n    setGlobalState(\"hasNavBar\", true)\n    }\n}, [props.hasNavBar])\n\nReact.useEffect(() => {\n  return () => {\n    setGlobalState(\"isWebCam\", true)\n  }\n}, [])\n\n  return (\n    <section style={props.sectionStyle}>\n        <BarcodeScanner />\n        <NavLink to={MAIN_PAGE_LINK}>\n                <button>Go to Welcome</button>\n            </NavLink>\n    </section>\n  )\n}\n\nexport default Scanner","import React from 'react'\nimport { setGlobalState } from '../state'\nimport \"../../styles/welcome.css\"\nimport { NavLink } from 'react-router-dom'\nimport { SCAN_PAGE_LINK } from '../constants/Global'\n\nconst Welcome = (props) => {\nReact.useEffect(() => {\nif (props.hasNavBar === true) {\n    setGlobalState(\"hasNavBar\", false)\n}\n}, [props.hasNavBar])\n\n    return (\n        <section style={props.sectionStyle}>\n            <div>Welcome</div>\n            <NavLink to={SCAN_PAGE_LINK}>\n                <button>Scan Code</button>\n            </NavLink>\n        </section>\n    )\n}\n\nexport default Welcome","import React from \"react\";\nimport { Route, Routes, useLocation } from \"react-router-dom\";\nimport { CART_PAGE_LINK, MAIN_PAGE_LINK, NO_PRODUCT_PAGE_LINK, SCAN_PAGE_LINK } from \"./components/constants/Global\";\nimport NavBar from \"./components/nav-bar\";\nimport Cart from \"./components/sections/cart\";\nimport ProductNotFound from \"./components/sections/product-not-found\";\nimport Scanner from \"./components/sections/scanner\";\nimport Welcome from \"./components/sections/welcome\";\nimport { setGlobalState, useGlobalState } from \"./components/state\";\nimport \"./styles.css\";\n\nfunction App() {\n  const [hasNavBar] = useGlobalState(\"hasNavBar\");\n  const [isWebCam] = useGlobalState(\"isWebCam\");\n  const location = useLocation();\n\n  const sectionStyle = {\n    minHeight: hasNavBar ? \"calc(100vh - var(--nav-height))\" : \"100vh\",\n    marginTop: hasNavBar && \"var(--nav-height)\",\n  };\n\n  React.useEffect(() => {\n    if(isWebCam === true) {\n    setGlobalState(\"isWebCam\", false)\n    window.location.reload()\n    }\n  }, [location.pathname])\n\n  return (\n    <div className=\"App\">\n      {hasNavBar && <NavBar />}\n      <Routes>\n        <Route\n          exact\n          path={MAIN_PAGE_LINK}\n          element={<Welcome hasNavBar={hasNavBar} sectionStyle={sectionStyle}/>}\n        />\n        <Route\n          exact\n          path={SCAN_PAGE_LINK}\n          element={<Scanner hasNavBar={hasNavBar} sectionStyle={sectionStyle}/>}\n        />\n        <Route\n          exact\n          path={CART_PAGE_LINK}\n          element={<Cart hasNavBar={hasNavBar} sectionStyle={sectionStyle}/>}\n        />\n        <Route\n          exact\n          path={NO_PRODUCT_PAGE_LINK}\n          element={<ProductNotFound hasNavBar={hasNavBar} sectionStyle={sectionStyle}/>}\n        />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles.css';\nimport App from './App';\nimport { HashRouter } from 'react-router-dom';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>\n);\n"],"sourceRoot":""}